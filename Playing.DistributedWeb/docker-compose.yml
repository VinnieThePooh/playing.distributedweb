version: "3.9"
services:  
  jaeger:
    image: jaegertracing/all-in-one:latest    
    ports:
      - "6831:6831/udp"
      - "16686:16686"
    networks:
      distributed_web:
       aliases:
        - jaeger-agent-host
        
  # works on linux platform only
  db-store:
    image: mariadb:latest    
    environment:     
     - MARIADB_ALLOW_EMPTY_ROOT_PASSWORD:true
    networks:
     distributed_web:
      aliases:
       - db-host
    #volumes:
    # - /var/lib/mysql/data:/var/lib/mysql/data
     
  # works on linux platform only
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
     - '2181:2181'
    environment:
    - ALLOW_ANONYMOUS_LOGIN=yes
    - ZOO_LOG_LEVEL=OFF
    networks:
    - distributed_web 
    
  # works on linux platform only
  kafka:
    image: 'bitnami/kafka:latest'
    ports:
    - '9092:9092'
    environment:
    - KAFKA_BROKER_ID=1
    - KAFKA_LISTENERS=PLAINTEXT://kafka-host:9092
    - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka-host:9092
    - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
    - ALLOW_PLAINTEXT_LISTENER=yes 
    depends_on:
    - zookeeper
    networks:
     distributed_web:
      aliases:
       - kafka-host    
       
  web-node-one:
    build: 
     context: .
     dockerfile: ./Web.NodeOne/Docker/Dockerfile
     args:      
      ENV_NAME: ${ENV_NAME}
    container_name: web-node-one
    environment:     
     - ASPNETCORE_ENVIRONMENT=${ENV_NAME}
     - ASPNETCORE_URLS=https://web-node-one:5001
     - ASPNETCORE_HTTPS_PORT=5001
     - ASPNETCORE_Kestrel__Certificates__Default__Password=${HTTPS_CERT_GEN_PASS}
     - ASPNETCORE_Kestrel__Certificates__Default__Path=/app/https/devcert.pfx"
    ports:
     - "5001:5001"   
    volumes:
     - ./certs/:/app/https/
    networks:
     distributed_web:
      aliases:
       - web-node-one
    depends_on:     
     - db-store   
     
  web-node-two:
    build: 
     context: .
     dockerfile: ./Web.NodeTwo/Docker/Dockerfile
     args:      
      ENV_NAME: ${ENV_NAME}
    container_name: web-node-two
    environment:
     - ASPNETCORE_ENVIRONMENT=${ENV_NAME}
     - ASPNETCORE_URLS=https://web-node-two:5002
     - ASPNETCORE_HTTPS_PORT=5002
     - ASPNETCORE_Kestrel__Certificates__Default__Password=${HTTPS_CERT_GEN_PASS}
     - ASPNETCORE_Kestrel__Certificates__Default__Path=/app/https/devcert.pfx"
    ports:
     - "5002:5002"    
    volumes:     
     - ./certs/:/app/https/
    networks:
     distributed_web:
      aliases:
       - web-node-two
    depends_on:     
     - kafka     
     
  web-node-three:
    build: 
     context: .
     dockerfile: ./Web.NodeThree/Docker/Dockerfile 
     args:      
      ENV_NAME: ${ENV_NAME}
    container_name: web-node-three
    environment:
     - ASPNETCORE_ENVIRONMENT=${ENV_NAME}
     - ASPNETCORE_URLS=https://web-node-three:5003
     - ASPNETCORE_HTTPS_PORT=5003
     - ASPNETCORE_Kestrel__Certificates__Default__Password=${HTTPS_CERT_GEN_PASS}
     - ASPNETCORE_Kestrel__Certificates__Default__Path=/app/https/devcert.pfx"
    ports:
     - "5003:5003"
    volumes:
     - ./certs/:/app/https/
    networks:
     distributed_web:
      aliases:
       - web-node-three
    depends_on:
     - kafka    
     
networks:
 distributed_web: